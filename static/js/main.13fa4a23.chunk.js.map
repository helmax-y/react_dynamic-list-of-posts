{"version":3,"sources":["api.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["getData","URL","fetch","then","response","json","User","_ref","_ref$user","user","name","email","address","react_default","a","createElement","Object","entries","map","_ref2","_ref3","slicedToArray","key","value","Fragment","Comment","_ref$comment","comment","body","className","CommentList","comments","commentData","components_Comment","id","Post","_ref$post","post","title","components_User","components_CommentList","PostList","posts","postData","components_Post","App","_useState","useState","_useState2","originalPosts","setOriginalPosts","_useState3","_useState4","visiblePosts","setPosts","_useState5","_useState6","isLoading","setLoading","_useState7","_useState8","isSearchError","setSearchError","_useState9","_useState10","isError","setError","filterPosts","f","delay","timerId","clearTimeout","setTimeout","debounce","filtered","filter","includes","length","type","placeholder","onChange","event","target","trim","onClick","users","loadedPosts","regenerator_default","async","_context","prev","next","awrap","Promise","all","sent","objectSpread2","find","userId","postId","t0","stop","components_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.13fa4a23.chunk.js","sourcesContent":["const postsURL = 'https://jsonplaceholder.typicode.com/posts';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\nconst commentsURL = 'https://jsonplaceholder.typicode.com/comments';\n\nconst getData = URL => fetch(URL)\n  .then(response => response.json());\n\nexport const getPosts = () => getData(postsURL);\nexport const getUsers = () => getData(usersURL);\nexport const getComments = () => getData(commentsURL);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user: { name, email, address } }) => (\n  <section>\n    <p>{name}</p>\n    <p>{email}</p>\n\n    <address>\n      {Object.entries(address)\n        .map(([key, value]) => typeof value !== 'object' && (\n          <React.Fragment key={key}>\n            {key}\n            {' '}\n            {value}\n            <br />\n          </React.Fragment>\n        ))\n      }\n    </address>\n  </section>\n);\n\nUser.propTypes = { user: PropTypes.shape({\n  name: PropTypes.string,\n  email: PropTypes.string,\n  address: PropTypes.object,\n}).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment: { name, email, body } }) => (\n  <section className=\"comment\">\n    <h3 className=\"comment__title\">\n      {name}\n    </h3>\n\n    <section className=\"comment__main-part\">\n      <p>\n        {email}\n      </p>\n\n      <p className=\"comment__body\">\n        {body}\n      </p>\n    </section>\n  </section>\n);\n\nComment.propTypes = { comment: PropTypes.shape({\n  name: PropTypes.string,\n  email: PropTypes.string,\n  body: PropTypes.string,\n}).isRequired };\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => comments.map(commentData => (\n  <Comment key={commentData.id} comment={commentData} />\n));\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ post: { title, body, user, comments } }) => (\n  <article className=\"post\">\n    <h2>{title}</h2>\n\n    <section className=\"post__main-part\">\n      <p className=\"post__body\">\n        {body}\n      </p>\n\n      <User user={user} />\n    </section>\n\n    <CommentList comments={comments} />\n  </article>\n);\n\nPost.propTypes = { post: PropTypes.shape({\n  title: PropTypes.string,\n  body: PropTypes.string,\n  user: PropTypes.object,\n  comments: PropTypes.arrayOf(PropTypes.object),\n}).isRequired };\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => posts.map(postData => (\n  <Post key={postData.id} post={postData} />\n));\n\nPostList.propTypes = { posts: PropTypes.arrayOf(PropTypes.object).isRequired };\n\nexport default PostList;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { getPosts, getUsers, getComments } from './api';\nimport PostList from './components/PostList';\n\nconst App = () => {\n  const [originalPosts, setOriginalPosts] = useState([]);\n  const [visiblePosts, setPosts] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [isSearchError, setSearchError] = useState(false);\n  const [isError, setError] = useState(false);\n\n  const loadData = async() => {\n    setLoading(true);\n\n    try {\n      const [\n        posts,\n        users,\n        comments,\n      ] = await Promise.all([getPosts(), getUsers(), getComments()]);\n\n      const loadedPosts = posts.map(post => ({\n        ...post,\n        user: users.find(user => user.id === post.userId),\n        comments: comments.filter(comment => comment.postId === post.id),\n      }));\n\n      setOriginalPosts(loadedPosts);\n      setPosts(loadedPosts);\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  const debounce = (f, delay) => {\n    let timerId = null;\n\n    return (value) => {\n      setSearchError(false);\n      clearTimeout(timerId);\n      timerId = setTimeout(f, delay, value);\n    };\n  };\n\n  const debounced = (value) => {\n    const filtered = originalPosts\n      .filter(post => post.title.includes(value)\n        || post.body.includes(value));\n\n    if (filtered.length === 0) {\n      setSearchError(true);\n    } else {\n      setPosts(filtered);\n    }\n  };\n\n  const filterPosts = debounce(debounced, 300);\n\n  return (\n    <main className=\"list\">\n      <h1>Dynamic list of posts</h1>\n      {visiblePosts.length !== 0 && (\n        <section className=\"search-bar\">\n          <input\n            type=\"text\"\n            placeholder=\"search post\"\n            className=\"input\"\n            onChange={event => filterPosts(event.target.value.trim())}\n          />\n          {isSearchError && (\n            <p className=\"warning\">\n              There are no such posts, please try another search combination\n            </p>\n          )}\n        </section>\n      )}\n\n      {isLoading && (\n        <button\n          type=\"button\"\n          className=\"button button--non-active\"\n        >\n          Loading\n        </button>\n      )}\n      {!isLoading && (visiblePosts.length === 0 ? (\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={loadData}\n        >\n          Load\n        </button>\n      ) : (\n        <PostList posts={visiblePosts} />\n      ))}\n      {isError && <p>There is an issue, please try again later</p>}\n    </main>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}